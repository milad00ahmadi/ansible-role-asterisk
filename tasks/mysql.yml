---
- name: Install MySQL
  apt:
    name:
      - mysql-server
      - python3-pymysql

- name: Start the MySQL service
  service:
    name: mysql
    state: started
    enabled: true

- name: Copy the root credentials as .my.cnf file
  template:
    src: root.cnf.j2
    dest: /root/.my.cnf
    mode: 0600

- name: Copy the mysqld.cnf
  template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    mode: 0600

- name: Update MySQL root password for all root accounts
  mysql_user: 'name=root host={{ item }} password={{ mysql_root_password }}
  state=present login_unix_socket="{{ mysql_socket }}"'
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false

- name: Get list of hosts for the root user.
  command: mysql -NBe
    "SELECT Host
    FROM mysql.user
    WHERE User = 'root'
    ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts
  changed_when: false
  check_mode: false

# Set root password for MySQL >= 5.7.x.
- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
    mysql -u root -NBe
    'ALTER USER "root"@"{{ item }}"
    IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}"; FLUSH PRIVILEGES;'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: >
    '5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout

# Set root password for MySQL < 5.7.x.
- name: Update MySQL root password for localhost root account (< 5.7.x).
  shell: >
    mysql -NBe
    'SET PASSWORD FOR "root"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}"); FLUSH PRIVILEGES;'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: >
    '5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout


- name: Remove anonymous MySQL users.
  mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"

- name: Remove MySQL test database.
  mysql_db: "name='test' state=absent"


- name: Create a new database
  mysql_db:
    name: "{{ mysql_asterisk_database }}"
    state: present
    login_unix_socket: "{{ mysql_socket }}"

- name: Create a mysql user
  mysql_user:
    name: "{{ mysql_asterisk_user }}"
    password: "{{ mysql_asterisk_user_password }}"
    host: "{{ mysql_host }}"
    priv: "{{ mysql_asterisk_user_priv }}"
    state: present
    login_unix_socket: "{{ mysql_socket }}"
